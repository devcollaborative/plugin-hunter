#!/usr/bin/env php
<?php

$step_number = 0; // For the step counter display.

$site_list = []; // Stores the initial set of all the user's pantheon sites.
$filtered_sites= []; // Filtered sites based on frozen status and version parameter
$results = []; // Stores the subset of filtered sites that have the designated plugin
$error_sites = []; // Stores the subset of filtered sites where the plugin check failed.

// Color codes
$red = "\e[0;31m";
$green = "\e[0;32m";
$magenta = "\e[0;35m";
$cyan = "\e[0;36m";

/**
 * display_step()
 * Outputs a numbered description of the current step,
 * e.g. "1.) Checking for foo"
 *
 * @param [string] $step_description Description of the step
 *
 */
function display_step ($step_description) {
  global $step_number;
  $step_number += 1;
  echo "\e[0;35m" . $step_number . ') ' . $step_description . "\033[0m";
  echo "\n";
}

/**
 * color_output()
 *
 * @param [string] $color color to use in shading the text.
 * @param [string] $text Text to color code.
 * @return void
 */
function color_output($color, $text) {
  return $color . $text . "\033[0m";
}

$plugins = $argv;
array_shift($plugins);  // drop the first argument (script name)

// Read in and validate command line arguments
if (!empty($plugins)) {
  $response = color_output($magenta, "Searching for active instances of the following plugin(s):\n") . implode(', ', $plugins);
} else {
  echo color_output($red, "Syntax error:") .  " plugin-hunt [plugin_name] \n";
  exit;
}

echo $response . "\n\n";

display_step('Getting list of Pantheon sites.');
$site_list = json_decode(shell_exec('terminus site:list --org=all --format=json --fields="name,framework,plan_name,frozen"'));
echo "Found " . count((array) $site_list) . " sites.\n\n";

display_step('Filtering for WordPress sites.');
foreach($site_list as $site) {
  if (($site->framework == "wordpress" || $site->framework == "wordpress_network") && !$site->frozen) {
    $filtered_sites[] = $site;
  }
}

if (empty($filtered_sites)) {
  echo color_output($red, "Sorry, no WordPress sites found.\n");
  exit;
} else {
  echo "Found " . count($filtered_sites) . " sites.\n\n";
}

display_step("Checking each site for the designated plugin(s).");
// Check for Sanbox sites -- dev instance should be evaluated for them, since
// there is no live.
foreach($filtered_sites as $site) {
  $env = 'live';
  echo "Checking " . color_output($cyan, $site->name) . ":\n";
  if ($site->plan_name == "Sandbox") {
    $env = 'dev';
  }

  // Gets array of all active plugins. Skips loading stuff we don't need just to check the version.
  $active_plugins = explode("\n", shell_exec("terminus wp $site->name.$env -- plugin list --status=active --format=csv --field=name --skip-update-check --skip-plugins --skip-themes --skip-packages 2>/dev/null"));

  // Remove the column headers from the array.
  array_shift($active_plugins);

  // An inability to get the plugin result will result in ["0" => ""]
  if (!empty($active_plugins[0])) {
    // check the array for the target plugin.
    foreach ($plugins as $plugin) {
      if (array_search($plugin, $active_plugins)) {
        echo color_output($green, "   ✔ ") . "$plugin found\n";
        $version = shell_exec("terminus wp $site->name.$env -- plugin get $plugin --field=version --skip-plugins --skip-themes --skip-packages 2>/dev/null");
        $results[$plugin][] = color_output($cyan, $site->name, 20) . ' ' . $version;
      } else {
        echo color_output($red, "   ✗ ") . "$plugin not found\n";
      }
    }
  } else {
    echo color_output($red, "Error getting plugin data:\n");
    $error_sites[] = $site->name;
  }

  echo "\n";
}

// Report all sites with the target plugin installed.
if (!empty($results)) {
  echo color_output($magenta, "\nSUMMARY:\n");
  foreach($results as $plugin => $plugin_results) {
    echo color_output($green, "\n$plugin") . " appears on the following sites:\n";
    echo implode('', $plugin_results) . "\n";
  }
}

// Report all sites where the plugin list could not be obtained.
if (!empty($error_sites)) {
  echo color_output($red, "\n\nNOTICE: There was a problem checking the following sites:\n");
  echo implode(',', $error_sites) . "\n";
}
